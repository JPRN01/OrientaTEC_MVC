@model OrientaTEC_MVC.ViewModels.EquipoGuiaViewModel
@{
    ViewData["Title"] = "Gestor de Actividades";
    var actividades = ViewBag.ActividadesViewModel as OrientaTEC_MVC.ViewModels.ActividadesViewModel;


}


<script src="https://cdn.tailwindcss.com"></script>

<style>



    body {
        font-family: 'Arial', sans-serif;
    }

   


    #popup, .info-popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 20px;
        display: none;
        z-index: 1000;
    }

    #overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: none; 
        z-index: 999;
    }

    #comments-container {
        max-height: 300px;
        overflow-y: auto;
        background-color: #f9f9f9;
        padding: 10px;
        border-radius: 8px;
    }

    #responsablesContainer {
        max-height: 150px; 
        overflow-y: auto; 
        border: 1px solid #ccc; 
        padding: 5px; 
    }



</style>





<body>


    <header>


        Layout = "~/Views/Shared/_Layout.cshtml";
    </header>


    <div class="bg-white p-8">
        <div class="max-w-7xl mx-auto">
            <div class="flex justify-between items-center mb-4">
                <div>
                    <label class="text-lg font-semibold">Selecciona una generación:</label>
                    <select id="generacionSelect" class="form-control">
                        <option value="">Seleccione...</option>
                        @foreach (var generacion in Model.EquiposGuia)
                        {
                            <option value="@generacion.Value">@generacion.Text</option>
                        }
                    </select>
                </div>
                <div>
                    <button id="searchButton" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                        Buscar Actividades
                    </button>

                    <button id="createButton" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded ml-4" onclick="openPopup()">
                        Crear Actividad
                    </button>

                </div>
            </div>

        </div>

        <input type="hidden" id="selectedGeneracionId" name="selectedGeneracionId" value="">


        <div id="overlay" class="overlay" onclick="closePopup()"></div>
        <div id="popup" class="bg-gray-100 p-6">

            <div class="bg-white p-6 rounded-lg shadow-lg max-w-4xl mx-auto">

                <div class="flex justify-between items-center mb-6">
                    <h1 class="text-2xl font-bold text-blue-500">
                        Crear nueva actividad
                    </h1>
                    <button id="closeButton" class="text-xl font-bold" onclick="closePopup()">X</button>
                </div>
                <div class="grid grid-cols-2 gap-6 mb-6">
                    <div>
                        <label class="block mb-2">Nombre</label>
                        <input id="activityName" class="w-full p-2 border border-gray-300 rounded" type="text" />
                    </div>


                    <div>
                        <label class="block mb-2">Estado</label>
                        <select id="estado" class="w-full p-2 border border-gray-300 rounded">
                            <option value="1">Planeada</option>
                            <option value="2">Notificada</option>
                            <option value="3">Realizada</option>
                            <option value="4">Cancelada</option>
                        </select>
                    </div>


                    <div>
                        <label class="block mb-2">Tipo</label>

                        <select id="tipo" class="w-full p-2 border border-gray-300 rounded">

                            <option value="">Seleccione Tipo...</option>
                            <option value="1">Motivacionales</option>
                            <option value="2">Orientadora</option>
                            <option value="3">Vida Estudiantil</option>
                            <option value="4">Técnica</option>
                            <option value="5">Recreación</option>
                        </select>

                    </div>



                    <div>
                        <label class="block mb-2">Responsables</label>
                        <div id="responsablesContainer">
                        </div>
                    </div>



                    <div>
                        <label class="block mb-2">Semana</label>
                        <select id="semana" class="w-full p-2 border border-gray-300 rounded">
                        </select>
                    </div>


                    <div>
                        <label class="block mb-2">Días previos para anunciar</label>
                        <select id="diasPreviosParaAnunciar" class="w-full p-2 border border-gray-300 rounded">
                            <option value="">Seleccione los días...</option>
                        </select>
                    </div>

                    <div>
                        <label class="block mb-2">Días previos para recordar</label>
                        <select id="diasPreviosParaRecordar" class="w-full p-2 border border-gray-300 rounded">
                        </select>
                    </div>





                    <div>
                        <label class="block mb-2">Modalidad</label>
                        <select id="modalidad" class="w-full p-2 border border-gray-300 rounded">
                            <option value="False">Presencial</option>
                            <option value="True">Remoto</option>
                        </select>
                    </div>


                    <div>
                        <label class="block mb-2">Enlace</label>
                        <input id="enlace" class="w-full p-2 border border-gray-300 rounded" type="text" />
                    </div>

                    <div>
                        <label class="block mb-2">Descripción</label>
                        <textarea id="descripcion" class="w-full p-2 border border-gray-300 rounded" rows="3"></textarea>
                    </div>

                    <div>
                        <label class="block mb-2">Afiche</label>
                        <input type="file" id="afiche" class="w-full p-2 border border-gray-300 rounded">
                    </div>


                </div>






                <div class="flex justify-end gap-4">
                    <button id="acceptButton" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" onclick="submitActivity()">Aceptar</button>
                    <button id="cancelButton" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded" onclick="closePopup()">Cancelar</button>
                </div>
            </div>


        </div>
    </div>



    <div id="overlayInfo" class="overlay" onclick="closeInfoPopup()"></div>

    <div id="infoPopup" class="info-popup bg-white p-6 mt-10 rounded-lg shadow-lg">

        <input type="hidden" id="popupIdActividad" value="" />

        <div class="max-w-lg mx-auto bg-white p-6 mt-10 rounded-lg shadow-lg relative">
            <button class="absolute top-0 right-0 mt-4 mr-4 text-gray-400 hover:text-gray-600" onclick="closeInfoPopup()">
                <i class="fas fa-times"></i>
            </button>




            <h2 id="popupTitulo" class="text-2xl font-bold mb-4">Titulo de la Actividad</h2>






            <button id="saveChangesButton" onclick="submitEditActivity()" class="hidden mb-4 bg-green-500 text-white rounded-md px-4 py-2 text-sm">Guardar Cambios</button>


            <div class="grid grid-cols-2 gap-4 mb-4">
                <div>
                    <label class="block text-sm font-medium mb-1">Semana</label>
                    <input id="popupSemana" type="number" class="w-full border-gray-300 rounded-md shadow-sm" readonly>
                </div>
                <div>
                    <label class="block text-sm font-medium mb-1">Responsables</label>
                    <input id="popupResponsables" type="text" class="w-full border-gray-300 rounded-md shadow-sm" readonly>
                </div>
            </div>
            <div class="grid grid-cols-2 gap-4 mb-4">
                <div>
                    <label class="block text-sm font-medium mb-1">Tipo</label>
                    <input id="popupTipo" type="text" class="w-full border-gray-300 rounded-md shadow-sm" readonly>
                </div>
                <div>
                    <label class="block text-sm font-medium mb-1">Días previos para anunciar</label>
                    <input id="popupDiasAnunciar" type="number" class="w-full border-gray-300 rounded-md shadow-sm" readonly>
                </div>
            </div>
            <div class="grid grid-cols-2 gap-4 mb-4">
                <div>
                    <label class="block text-sm font-medium mb-1">Modalidad</label>
                    <input id="popupModalidad" type="text" class="w-full border-gray-300 rounded-md shadow-sm" readonly>
                </div>
                <div>
                    <label class="block text-sm font-medium mb-1">Enlace</label>
                    <input id="popupEnlace" type="text" class="w-full border-gray-300 rounded-md shadow-sm" readonly>
                </div>
            </div>
            <div class="grid grid-cols-2 gap-4 mb-4">
                <div>
                    <label class="block text-sm font-medium mb-1">Adjuntar evidencia</label>
                    <button class="bg-gray-300 text-gray-700 rounded-md px-4 py-2" disabled>Cargar</button>
                </div>
                <div>
                    <label class="block text-sm font-medium mb-1">Estado</label>
                    <input id="popupEstado" type="text" class="w-full border-gray-300 rounded-md shadow-sm" readonly>
                </div>
            </div>
            <div class="mb-4">
                <label class="block text-sm font-medium mb-1">Descripción</label>
                <textarea id="popupDescripcion" class="w-full border-gray-300 rounded-md shadow-sm" rows="3" readonly></textarea>
            </div>

            <div class="mb-4">
                <label class="block text-sm font-medium mb-1">Comentarios</label>
                <div id="comments-container" class="space-y-2">
                </div>
                <button onclick="openCommentModal()" class="mt-2 bg-blue-500 text-white rounded-md px-4 py-2">Comentar</button>
            </div>
            <div class="flex justify-end">
                <button onclick="closeInfoPopup()" class="bg-red-500 text-white rounded-md px-4 py-2">Salir</button>
            </div>

            <div>
                <button id="editButton" onclick="toggleEdit(true)" class="mb-4 bg-blue-500 text-white rounded-md px-4 py-2 text-sm">Editar</button>
            </div>


            <div>

                <button id="deleteActivityButton" onclick="deleteActivity()" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Eliminar</button>
            </div>


        </div>


        <div id="commentModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
            <div class="bg-white p-6 rounded-lg shadow-lg">
                <h3 class="text-lg font-bold mb-4">Nuevo Comentario</h3>
                <input id="commentName" type="text" placeholder="Nombre" class="w-full border-gray-300 rounded-md shadow-sm mb-2">
                <input id="commentTitle" type="text" placeholder="Título" class="w-full border-gray-300 rounded-md shadow-sm mb-2">
                <textarea id="commentText" placeholder="Comentario" class="w-full border-gray-300 rounded-md shadow-sm mb-4"></textarea>
                <button onclick="saveComment()" class="bg-green-500 text-white rounded-md px-4 py-2">Guardar</button>
                <button onclick="closeCommentModal()" class="ml-2 bg-red-500 text-white rounded-md px-4 py-2">Cancelar</button>
            </div>
        </div>


        <div id="commentPopup" class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center" style="display:none;">
            <div class="bg-white p-6 rounded-lg shadow-lg w-1/3">
                <h2 class="text-lg font-bold mb-4">COMENTA</h2>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700">Nombre de usuario</label>
                    <input type="text" id="commentUserName" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                </div>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700">Título</label>
                    <input type="text" id="commentTitle" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                </div>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700">Comentario</label>
                    <textarea id="commentText" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" rows="3"></textarea>
                </div>
                <div class="flex justify-end">
                    <button class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded" onclick="addComment()">Enviar</button>
                    <button class="ml-2 bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded" onclick="closeCommentPopup()">Cerrar</button>
                </div>
            </div>
        </div>
    </div>



    <div class="flex space-x-4 mb-6">
        <div class="flex items-center">
            <span class="h-4 w-4 bg-green-400 rounded-full mr-2"></span>
            <span>Planeada</span>
        </div>
        <div class="flex items-center">
            <span class="h-4 w-4 bg-blue-400 rounded-full mr-2"></span>
            <span>Notificada</span>
        </div>
        <div class="flex items-center">
            <span class="h-4 w-4 bg-gray-400 rounded-full mr-2"></span>
            <span>Realizada</span>
        </div>
        <div class="flex items-center">
            <span class="h-4 w-4 bg-red-400 rounded-full mr-2"></span>
            <span>Cancelada</span>
        </div>
    </div>

    <div class="bg-blue-100 p-6 rounded-lg shadow-lg">
        <div class="bg-blue-100 p-6 rounded-lg shadow-lg">






            <div id="actividadesContainer" class="mt-4"></div>


            <div class="grid grid-cols-4 gap-4">
                @if (actividades != null && actividades.Actividades.Any())
                {
                    foreach (var actividad in actividades.Actividades)
                    {

                        string color = actividad.Estado.Estado switch
                        {
                            EstadoActividad.Planeada => "bg-green-300",
                            EstadoActividad.Notificada => "bg-blue-300",
                            EstadoActividad.Realizada => "bg-gray-300",

                            EstadoActividad.Cancelada => "bg-red-300",
                            _ => "bg-white"

                        };

                        <div class="relative @color p-4 rounded-lg shadow-md" data-id="@actividad.IdActividad">
                            <h2 class="text-lg font-bold">@actividad.Nombre</h2>
                            <button class="absolute top-0 right-2 text-blue-700 text-xl"
                                    onclick="deleteActivity(@actividad.IdActividad, event)">
                                x
                            </button>
                        </div>

                    }
                }
            </div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>



</body>






<script>

    function toggleEdit(enableEdit) {
        const isEditable = enableEdit || false;
        $('#popupNombre').prop('readonly', !isEditable);
        $('#popupDescripcion').prop('readonly', !isEditable);
        $('#popupSemana').prop('readonly', !isEditable);
        $('#popupModalidad').prop('disabled', !isEditable);
        $('#popupEnlace').prop('readonly', !isEditable);
        $('#popupDiasAnunciar').prop('readonly', !isEditable);
        $('#popupDiasRecordar').prop('readonly', !isEditable);
        $('#popupEstado').prop('disabled', !isEditable);
        $('#popupTipo').prop('disabled', !isEditable);

        // Toggle button visibility
        $('#editButton').toggle(!isEditable);
        $('#saveChangesButton').toggle(isEditable);
    }

    function deleteActivity() {
        var idActividad = $('#popupIdActividad').val(); 

        if (confirm('¿Estás seguro de que quieres eliminar esta actividad?')) {
            $.ajax({
                url: '/Actividades/EliminarActividad',
                type: 'POST',
                data: { idActividad: idActividad },
                success: function (response) {
                    if (response.success) {
                        alert('Actividad eliminada con éxito');
                        closeInfoPopup(); 
                      
                    } else {
                        alert('Error al eliminar la actividad: ' + response.message);
                    }
                },
                error: function () {
                    alert('Error al eliminar la actividad');
                }
            });
        }
    }

    $(document).ready(function () {
    
        $('#generacionSelect').change(function () {
          
            $('#selectedGeneracionId').val($(this).val());
        });

     
        $('#selectedGeneracionId').val($('#generacionSelect').val());
    });



    function submitActivity() {
        var formData = new FormData();
        formData.append('nombre', $('#activityName').val());
        formData.append('generacionId', $('#selectedGeneracionId').val());
        formData.append('tipoId', $('#tipo').val());
        formData.append('esVirtual', $('#modalidad').val() === "True");
        formData.append('estadoId', $('#estado').val());
        formData.append('enlace', $('#enlace').val());
        formData.append('descripcion', $('#descripcion').val());
        formData.append('diasPreviosParaAnunciar', $('#diasPreviosParaAnunciar').val());
        formData.append('diasPreviosParaRecordar', $('#diasPreviosParaRecordar').val());
        formData.append('semana', $('#semana').val());
        if ($('#afiche')[0].files[0]) {
            formData.append('afiche', $('#afiche')[0].files[0]);
        }

       
        $('input[name="profesoresIds"]:checked').each(function () {
            formData.append('profesoresNombres', $(this).val());
        });

       
        for (var pair of formData.entries()) {
            console.log(`${pair[0]}: ${pair[1]}`);
        }

        $.ajax({
            url: '/Actividades/CrearActividad',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                alert('Actividad creada exitosamente');
                closePopup();
            },
            error: function (error) {
                console.error('Error al crear la actividad: ' + error.responseText);
                alert('Error al crear la actividad: ' + error.responseText);
            }
        });
    }


    

    

    function getTipoDescripcion(tipo) {
        switch (tipo) {
            case '1':
                return 'Motivacionales';
            case '2':
                return 'Orientadora';
            case '3':
                return 'Vida Estudiantil';
            case '4':
                return 'Técnica';
            case '5':
                return 'Recreación';
            default:
                return 'Desconocido';
        }
    }

    function closePopup() {
        document.getElementById('overlay').style.display = 'none';
        document.getElementById('popup').style.display = 'none';
    }

    $(document).ready(function () {
        $('#searchButton').click(function () {
            var generacionId = $('#generacionSelect').val();
            $.ajax({
                url: '/Actividades/PlaneacionActividades',
                type: 'GET',
                data: { generacionId: generacionId },
                success: function (data) {
                    var actividadesHtml = "";
                    data.forEach(act => {
                        let color = '';
                        switch (act.estado) {
                            case 'Planeada':
                                color = 'bg-green-300';
                                break;
                            case 'Notificada':
                                color = 'bg-blue-300';
                                break;
                            case 'Realizada':
                                color = 'bg-gray-300';
                                break;
                            case 'Cancelada':
                                color = 'bg-red-300';
                                break;
                            default:
                                color = 'bg-white';
                                break;
                        }

                        actividadesHtml += `
                                <div class="relative ${color} p-4 rounded-lg shadow-md" onclick="openInfoPopup(this)"
                             data-id="${act.idActividad}"
                             data-nombre="${act.nombre}"
                             data-descripcion="${act.descripcion}"
                             data-estado="${act.estado}">
                            <h2 class="text-lg font-bold">${act.nombre}</h2>
                            <button class="absolute top-0 right-2 text-blue-700 text-xl">x</button>
                        </div>
                        `;
                    });
                    $('.grid.grid-cols-4.gap-4').html(actividadesHtml);
                },
                error: function (xhr, status, error) {
                    console.error("Error:", xhr, status, error);
                    $('.grid.grid-cols-4.gap-4').html('<div class="alert alert-danger">Error al cargar las actividades.</div>');
                }
            });
        });

        $('#searchButton').trigger('click'); 
    });
    function openCommentModal() {
        document.getElementById('commentModal').classList.remove('hidden');
    }

    function closeCommentModal() {
        document.getElementById('commentModal').classList.add('hidden');
    }

    function submitEditActivity() {
        var formData = new FormData();
        formData.append('IdActividad', parseInt($('#popupIdActividad').val(), 10));
        formData.append('Nombre', $('#popupTitulo').text()); // Verifica que sea text() o val()
        formData.append('Descripcion', $('#popupDescripcion').val());
        formData.append('Semana', parseInt($('#popupSemana').val(), 10));
        formData.append('EsVirtual', $('#popupModalidad').val() === "True");
        formData.append('ReunionUrl', $('#popupEnlace').val());
        formData.append('DiasPreviosParaAnunciar', parseInt($('#popupDiasAnunciar').val(), 10));
        formData.append('DiasParaRecordar', parseInt($('#popupDiasRecordar').val(), 10));
        formData.append('EstadoId', parseInt($('#popupEstado').data('estadoId'), 10));
        formData.append('TipoId', parseInt($('#popupTipo').data('tipoId'), 10));

        $.ajax({
            url: '/Actividades/EditarActividad',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success) {
                    alert('Actividad actualizada exitosamente');
                    closeInfoPopup();
                } else {
                    alert('Error al actualizar la actividad: ' + response.message);
                }
            },
            error: function () {
                alert('Error al enviar la solicitud de edición');
            }
        });
    }



    function saveComment() {
        const name = document.getElementById('commentName').value;
        const title = document.getElementById('commentTitle').value;
        const text = document.getElementById('commentText').value;

        const commentContainer = document.getElementById('comments-container');
        const newComment = document.createElement('div');
        newComment.classList.add('p-4', 'bg-gray-100', 'rounded-md');


        newComment.innerHTML = `
                        <p class="font-medium">${name}</p>
                        <p class="text-sm mt-2">Título: ${title}</p>
                        <p class="text-sm">${text}</p>
                    `;

        commentContainer.appendChild(newComment);

        closeCommentModal();
    }

    function openPopup() {
        document.getElementById('popup').style.display = 'block';
        document.getElementById('overlay').style.display = 'block';
    }

    function cargarProfesores() {
        var selectedGeneracionId = $('#generacionSelect').val();
        if (!selectedGeneracionId) {
            $('#responsablesContainer').html('<div>Seleccione una generación primero</div>');
            return;
        }

        fetch(`/Actividades/ObtenerProfesores?generacionId=${selectedGeneracionId}`)
            .then(response => response.json())
            .then(profesores => {
                $('#responsablesContainer').empty();
                if (profesores.length > 0) {
                    profesores.forEach(profesor => {
                        $('#responsablesContainer').append(`
                            <div>
                                <input type="checkbox" name="profesoresIds" value="${profesor.nombre1}" id="profesor-${profesor.nombre1}">
                                <label for="profesor-${profesor.nombre1}">${profesor.nombreCompleto}</label>
                            </div>
                        `);
                    });
                } else {
                    $('#responsablesContainer').append('<div>No hay profesores disponibles</div>');
                }
            })
            .catch(error => {
                console.error('Error al cargar profesores:', error);
                $('#responsablesContainer').append('<div>Error al cargar profesores</div>');
            });
    }

    document.getElementById('createButton').addEventListener('click', () => {
        cargarProfesores();
        document.getElementById('popup').style.display = 'block';
        document.getElementById('overlay').style.display = 'block';
    });






    function closePopup() {
        document.getElementById('popup').style.display = 'none';
        document.getElementById('overlay').style.display = 'none';
    }


    function getEstadoDescripcion(estado) {
        switch (estado) {
            case '1':
                return 'Planeada';
            case '2':
                return 'Notificada';
            case '3':
                return 'Realizada';
            case '4':
                return 'Cancelada';
            default:
                return 'Desconocido';
        }
    }

    function openInfoPopup(element) {
        var actividadId = element.getAttribute('data-id');
        $.ajax({
            url: '/Actividades/ObtenerDetallesActividad',
            type: 'GET',
            data: { idActividad: actividadId },
            success: function (data) {






                console.log("Datos recibidos:", data);
                $('#popupIdActividad').val(data.idActividad);
                $('#popupTitulo').text(data.nombre);
                $('#popupSemana').val(data.semana);
                $('#popupDiasAnunciar').val(data.diasPreviosParaAnunciar);
                $('#popupResponsables').val(data.responsables || 'No asignados');
                $('#popupModalidad').val(data.esVirtual ? 'Remoto' : 'Presencial');
                $('#popupEnlace').val(data.reunionUrl || 'No existe');
                $('#popupDescripcion').val(data.descripcion);





                $('#popupEstado').data('estadoId', data.estado);
                $('#popupEstado').val(getEstadoDescripcion(data.estado));

                $('#popupTipo').data('tipoId', data.tipo);
                $('#popupTipo').val(getTipoDescripcion(data.tipo)); // Asegúrate de que esta función maneje correctamente los valores

                // Asegúrate de que 'data.tipo' es correcto aquí
                console.log('Tipo ID recibido:', data.tipo);



                $('#infoPopup').show();
                $('#overlayInfo').show();
            },
            error: function () {
                alert('Error al cargar los detalles de la actividad');
            }
        });
    }

    function deleteActivity() {
        var idActividad = $('#popupIdActividad').val();  

        if (confirm('¿Estás seguro de que quieres eliminar esta actividad?')) {
            $.ajax({
                url: '/Actividades/EliminarActividad',
                type: 'POST',
                data: { idActividad: idActividad },
                success: function (response) {
                    if (response.success) {
                        alert('Actividad eliminada con éxito');
                        closeInfoPopup();
                        
                    } else {
                        alert('Error al eliminar la actividad: ' + response.message);
                    }
                },
                error: function () {
                    alert('Error al eliminar la actividad');
                }
            });
        }
    }


    document.addEventListener('DOMContentLoaded', function () {
        var semanaSelect = document.getElementById('semana');
        var selectAnunciar = document.getElementById('diasPreviosParaAnunciar');
        var selectRecordar = document.getElementById('diasPreviosParaRecordar');

        for (var i = 1; i <= 52; i++) {
            var optionSemana = document.createElement('option');
            optionSemana.value = i;
            optionSemana.text = 'Semana ' + i;
            semanaSelect.appendChild(optionSemana);
        }

        for (var i = 1; i <= 30; i++) {
            var optionAnunciar = document.createElement('option');
            optionAnunciar.value = i;
            optionAnunciar.text = i + ' día' + (i > 1 ? 's' : '');
            selectAnunciar.appendChild(optionAnunciar);

            var optionRecordar = document.createElement('option');
            optionRecordar.value = i;
            optionRecordar.text = i + ' día' + (i > 1 ? 's' : '');
            selectRecordar.appendChild(optionRecordar);
        }
    });


    function closeInfoPopup() {
        document.getElementById('infoPopup').style.display = 'none';
        document.getElementById('overlayInfo').style.display = 'none';
    }
    document.getElementById('createButton').addEventListener('click', openPopup);
    document.querySelectorAll('.closeButton').forEach(btn => {
        btn.addEventListener('click', closePopup);
    });

    function addComment() {
        var comentarioData = {
            mensaje: $('#commentText').val(),
            idActividad: $('#IdActividad').val(),
            centroAcademico: 'Código del centro académico', 
            numero: 123, 
            idComentarioPadre: null 
        };

        $.ajax({
            url: '/Actividades/AgregarComentario',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(comentarioData),
            success: function (response) {
                if (response.success) {
                 
                    alert('Comentario agregado exitosamente');
                    $('#comments-container').prepend(`<div>${comentarioData.mensaje}</div>`);
                } else {
                    alert('Error al agregar comentario: ' + response.message);
                }
            },
            error: function () {
                alert('Error al enviar comentario');
            }
        });
    }

    function submitEditActivity() {
        var formData = new FormData();
        formData.append('IdActividad', parseInt($('#popupIdActividad').val(), 10));
        formData.append('Nombre', $('#popupTitulo').text());
        formData.append('Descripcion', $('#popupDescripcion').val());
        formData.append('Semana', parseInt($('#popupSemana').val(), 10));
        formData.append('EsVirtual', $('#popupModalidad').val() === "True" ? true : false);
        formData.append('ReunionUrl', $('#popupEnlace').val());
        formData.append('DiasPreviosParaAnunciar', parseInt($('#popupDiasAnunciar').val(), 10));
        formData.append('DiasParaRecordar', parseInt($('#popupDiasRecordar').val(), 10));
        formData.append('EstadoId', parseInt($('#popupEstado').data('estadoId'), 10));
        formData.append('TipoId', parseInt($('#popupTipo').data('tipoId'), 10));

        $.ajax({
            url: '/Actividades/EditarActividad',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success) {
                    alert('Actividad actualizada exitosamente');
                    closeInfoPopup();
                } else {
                    alert('Error al actualizar la actividad: ' + response.message);
                }
            },
            error: function () {
                alert('Error al enviar la solicitud de edición');
            }
        });
    }


</script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
